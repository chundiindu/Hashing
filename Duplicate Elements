You are given an array A of size N. The array contains almost distinct elements with some duplicated. You have to print the elements in sorted order which appears more than once.

Input Format:
The first line of input contains T, denoting the number of testcases. T testcases follow. Each testcase contains two lines of input.  The first line of input contains size of array N. The second line contains N integers separated by spaces.

Output Format:
For each test case, in a new line, print the required answer. If there are no duplicates print -1.

Your Task:
Your task is to complete the function SortedDuplicates(arr, n) which accepts array and its size as an argument.

class Geeks
{
    // print the elements which appear more than
    // once in the array in sorted order
    public static void SortedDuplicates(int arr[], int n)
    {
        TreeMap<Integer,Integer> map = new TreeMap<Integer,Integer>();
        for(int i=0;i<n;i++)
        {
            if(map.containsKey(arr[i]))
            {
                map.put(arr[i],map.get(arr[i])+1);
            }
            else
            {
                map.put(arr[i],1);
            }
        }
        boolean ContainsDuplicate = false;
        for(Map.Entry<Integer,Integer> itr: map.entrySet())
        {
            if(itr.getValue()>1)
            {
                System.out.print(itr.getKey()+" ");
                ContainsDuplicate = true;
            }
        }
        if(!ContainsDuplicate)
        {
            System.out.print(-1);
        }
    }
    
}
